0: DB分类






------------------------------------------------------------------------------------------------------------
0: 事务隔离级别
1: SQL注入
2: 聚簇索引／为什么索引快
3: 代码中#{}和${}的区别是什么
4: char,nchar,varchar,nvarchar的区别是什么
5: 深入了解MVCC（Mutli Version Concurreny Control,多版本并发控制）
6: 扩容评估
------------------------------------------------------------------------------------------------------------


0: 事务隔离级别 # 所有的可重复读、脏读、幻读都是指B事务是否可以读取到A事务操作的数据
    * READ_UNCOMMITTED(读取未提交内容): 这是事务最低的隔离级别，它充许令外一个事务可以看到这个事务未提交的数据。这种隔离级别会产生脏读，不可重复读
                                      和幻像读。 
                                      # 【是】脏读
                                      # 【是】不可重复读
                                      # 【是】幻读
                                      # 级别最低
    * READ_COMMITTED(读取提交内容): 保证一个事务修改的数据提交后才能被另外一个事务读取。另外一个事务不能读取该事务未提交的数据（不可重复读），意味
                                  着我们在同一个事务中执行完全相同的select语句时可能看到不一样的结果。（中间发生了commit）
                                      # 【否】会脏读
                                      # 【是】不可重复读（针对其他食物中两个相同的select而言）
                                      # 【是】幻读
                                      # --- Oracle默认的隔离级别
    * REPEATABLE_READ(可重复读): 保证一个事务不能读取另一个事务未提交的数据外，还保证了避免下面的情况产生(不可重复读)-A中的两次读取数据一致，中间不
                                会读取到B提交的数据。
                                      # 【否】脏读
                                      # 【否】不可重复读
                                      # 【是】幻读(读到的和实际的不一样)
                                      # --- Mysql默认的级别
    * SERIALIZABLE(可串行化): 这是花费最高代价但是最可靠的事务隔离级别。事务被处理为顺序执行。 
                                      # 【否】脏读
                                      # 【否】不可重复读
                                      # 【否】幻读
                                      # 级别最高
    不可重复读与幻读的区别:
      *脏读的重点是读另一个事务未提交的数据: A事务更新一份数据, B事务在此时读取了同一份数据, 由于某些原因A RollBack了, 则B事务读取的数据就是不正确的
      *不可重复读的重点是修改: 同样的条件, 你读取过的数据, 再次读取出来发现值不一样了
      *幻读的重点在于新增或者删除: 简单的说，幻读指A事务读取某一范围的数据行时，B事务在该范围内插入了新行，A再读取该范围的数据行时，发现有新的“幻影” 行
      当然, 从总的结果来看, 似乎两者都表现为两次读取的结果不一致, 但如果你从控制的角度来看, 两者的区别就比较大, 对于不可重复读, 只需要锁住满足条件的记
      录, 对于幻读, 要锁住满足条件及其相近的记录

    Mysql隔离级别--不同隔离级别造成【不可重复度】和【可补充复读】: MVCC中一旦数据修改会对历史数据进行快照保存即MVCC（多快照版本并发控制），因此保证修
    改某一行时对改行加X锁（排他锁）时不阻塞读的操作--一致性共享读；故，ReadCommitted总是读取行的最新版本，如果行被锁定了，则读取该行版本的最新一个快照
    。Repeatable的隔离级别总是读取事务开始时的行数据。因此ReadCommitted会出现不可重复读，而Repeatable情况下不会。（事务开始后前后两个一样的查询sql
    之间另外一个事务提交了数据修改，Repeatable前后两次一样）

1: SQL注入
  措施：
  数据格式校验、转义、利用mysql预编译机制校验

2: 聚簇索引／为什么索引快
  聚簇索引是对磁盘上实际数据重新组织以按指定的一个或多个列的值排序的算法。特点是存储数据的顺序和索引顺序一致。一般情况下主键会默认创建聚簇索引，且
  一张表只允许存在一个聚簇索引。
  在《数据库原理》一书中是这么解释聚簇索引和非聚簇索引的区别的：聚簇索引的叶子节点就是数据节点(B+Tree)，而非聚簇索引的叶子节点仍然是索引节点，只
  不过有指向对应数据块的指针。(BTree)

3: 代码中#{}和${}的区别是什么？
  ${}是Properties文件中的变量占位符，它可以用于标签属性值和sql内部，属于静态文本替换，比如${driver}会被静态替换为com.mysql.jdbc.Driver。
  #{}是sql的参数占位符，Mybatis会将sql中的#{}替换为?号，在sql执行前会使用PreparedStatement的参数设置方法，按序给sql的?号占位符设置参数值，比
  如ps.setInt(0, parameterValue)，#{item.name}的取值方式为使用反射从参数对象中获取item对象的name属性值，相当于param.getItem().getName()
  一般我们使用#{}，不使用${}，原因：会引起sql注入，${}会直接参与sql编译，会影响sql语句的预编译。

4: char,nchar,varchar,nvarchar的区别是什么？
nchar and nvarchar can store Unicode characters.
char and varchar cannot store Unicode characters.
char and nchar are fixed-length which will reserve storage space for number of characters you specify even if you don't use up all that space.
varchar and nvarchar are variable-length which will only use up spaces for the characters you store. It will not reserve storage like char or nchar.
nchar and nvarchar will take up twice as much storage space, so it may be wise to use them only if you need Unicode support.

5: 深入了解MVCC（Mutli Version Concurreny Control,多版本并发控制）
数据库并发控制：https://www.jianshu.com/p/032739e930c0


6: 扩容评估
[数据库架构]说明mysql的数据库的架构，主从架构（包含多主多从架构），说明一个1单元组占用2台服务器资源，主从备架构说明1个单元组占用3台服务器资源。分布式
                数据库架构是针对分布式数据库，例如Hbase，ClickHouse等
[TPS预估]业务稳定状态下, 全天峰值访问量(每秒事务语句数量)，注意：服务器资源数量是根据tps来计算的，认真计算tps和申请服务器资源的数量
[QPS预估]业务稳定状态下, 全天峰值访问量(每秒查询语句数量)预计1年的空间使用量(G)：业务未来1年所需磁盘存储大小(包括所有主从备服务器占用的总空间)
[扩容项目] :
                近1自然年的空间使用量（G）:扩容项目说明最近1年的主从备总空间的使用量
                当前空间使用百分比: 扩容项目当前空间使用的百分比。
                预计1年的空间使用量（G）：扩容项目预计未来1年的主从备总空间的使用量
                预计空间增量百分比（每年）: 预计每年空间增量率
[物理机]默认物理机配置是标C服务器，128G内存，40核CPU，6T磁盘空间，SSD磁盘。预估可承载业务量为：mysql5.6 3000tps/10000qps, mysql5.7 8000tps/12000qps
[虚拟机]默认虚拟机配置是标C五分之一，20G内存，8核CPU，1T磁盘空间，SSD磁盘。（存储空间与IO资源不做绝对限制，与服务器上其它实例共享）预估可承载业
                务量为：800tps, 3000qps
[业务量预估]核心业务指标全年的数量, 如交易量/订单量, 需统计未来1年的需求
[业务量预估补充说明]对该指标的简单描述, 如业务为扩容需求, 请同时补充历史1~2年的实际业务指标
数据库服务器数量特别说明 ：
                 1) 最小配置为同机房1主1备。如业务需求异地机房灾备或读写分离，可按需求增加从库和备库数量;
                 2) 注意申请数量需包含所有节点，如1主1从1备为3台服务器资源
物理机数量计算公式=(评估的tps/8000)*数据库架构
虚拟机数量计算公式=(评估的tps/800)*数据库架构