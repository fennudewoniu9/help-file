0: 文件复制（NetCat）
  #scp也可以
  - 在接受文件的服务器上开启一个监听端口，和需要写入的文件：nc -l 1111 > self.jpg #self.jpg会被新建
  - 在源文件的服务器上发送文件：nc 127.0.0.1 1111 < H20.jpg #ip/port都是刚才开启的那个监听的机器的IP和port
  等于是在两个机器之间开了一个流

1: source命令
  source 配置文件 = . 配置文件
  可以在不注销重新登录的情况使配置文件重新加载、生效

2: 环境变量--对系统登录生效的
  /etc/profile
  /etc/profile.d/*.sh
  ~/.bash_profile
  ~/.bashrc
  /etc/bashrc
  以上五组文件也代表着系统启动时用户正常登录的加载顺序，如果通过su切换用户，只会顺序加载/etc/bashrc、/etc/profile.d/*.sh这两类。

   cat /proc/ cpuinfo - CPU (i.e. vendor, Mhz, flags like mmx)
   cat /proc/meminfo - 内存信息(i.e. mem used, free, swap size)
   cat /proc/interrupts - 中断
   cat /proc/ioports - 设备IO端口
   cat /proc/partitions - 所有设备的所有分区
   cat /proc/pci - PCI设备的信息
   cat /proc/swaps - 所有Swap分区的信息
   cat /proc/version - Linux的版本号 相当于 uname -r
   uname -a - 看系统内核等信息

3: 历史命令
  Path: ～/.bash_history 
  本次登录操作的命令会保存在内存中，退出后才写到该文件中。

4: 欢迎信息
  /etc/issue      本地登录信息显示
  /etc/issue.net  远程登录信息显示 不支持转义字符 只支持普通文本
                  是否显示远程登录信息，由ssh的配置文件/etc/ssh/sshd_config决定，加入Banner /etc/issue.net
  /etc/motd       本地或远程都可在登录后显示欢迎信息

5: tar
	-c: 建立压缩档案 
	-x：解压 
	-t：查看内容 
	-r：向压缩归档文件末尾追加文件 
	-u：更新原压缩包中的文件
	这五个是独立的命令，压缩解压都要用到其中一个，可以和别的命令连用但只能用其中一个。
	下面的参数是根据需要在压缩或解压档案时可选的。  
	-z：有gzip属性的 
	-j：有bz2属性的 
	-Z：有compress属性的 
	-v：显示所有过程 
	-O：将文件解开到标准输出
	下面的参数-f是必须的
	-f: 使用档案名字，切记，这个参数是最后一个参数，后面只能接档案名。

6: 批量删除进程
  ps -ef | grep node | awk '{print $2}' | xargs kill -9

7: 产看某一段口使用情况
  lsof -i:20000

8: 产看段口使用情况
  netstat -tln 

9: SSH
  参数R和L指具体数据发送的方向，是请求执行ssh的机器、还是从执行ssh机器上发出:

  远程转发:  NAT？
      将远程主机(服务器)的某个端口转发到本地端指定机器的指定端口. 工作原理是这样的, 远程主机上分配了一个 socket 侦听 port 端口, 一旦这个端口上有
      了连接, 该连接就经过安全通道转向出去, 同时本地主机和host 的 hostport 端口建立连接. 可以在配置文件中指定端口的转发. 只有用 root 登录远程主
      机才能转发特权端口.
      相当于把本机端口(公司内部机器)映射到远程(家)，建立一个隧道 。可以解决在家访问公司内部机器的情况。
      ssh -N -f -R 2222:192.168.0.100:22  11.123.34.123 # 公司内部机器执行
      # 192.168.0.100 ：公司内部机器IP
      # 11.123.34.123 ：家里机器的外网IP
      ssh -p 2222 localhost   # 在IP是11.123.34.123的机器上用改命令就可以登陆公司的IP是192.168.0.100的机器了。

  本地转发:  NAT
      将本地机（客户机）的某个端口转发到远端指定机器的指定端口. 工作原理是这样的, 本地机器上分配了一个 socket 侦听 port 端口, 一旦这个端口上有了
      连接, 该连接就经过安全通道转发出去, 同时远程主机和 host的 hostport 端口建立连接. 可以在配置文件中指定端口的转发. 只有 root 才能转发特权端
      口.
      相当于把远程端口(家)映射到本机(公司内部机器)，建立一个隧道 。可以解决在公司内部访问被防火墙禁掉的网站的情况。
      ssh -N -f -L 2121:234.234.234.234:21  11.123.34.123 # 公司内部机器执行
      # 234.234.234.234  ：被防火墙禁掉的网站的IP
      # 11.123.34.123    ：家里机器的外网IP
      ftp://localhost:2121    # 现在访问本地2121端口，就能连接234.234.234.234的21端口了

  动态转发:
      指定一个本地机器 “动态的” 应用程序端口转发. 工作原理是这样的, 本地机器上分配了一个 socket 侦听 port 端口, 一旦这个端口上有了连接,该连接就
      经过安全通道转发出去, 根据应用程序的协议可以判断出远程主机将和哪里连接. 目前支持 SOCKS 协议, ssh 将充当 SOCKS 服务器.只有 root 才能转发
      特权端口.
      可以这样理解，远程和本地转发都是在隧道上传输一个服务，比如HTTP数据流。而动态转发则是为了在隧道上传输多种不确定的网络服务。相当于把远端ssh服务器当作了一个安全的代理服务器。
      ssh -N -f -D 20000 exchange@10.213.129.57 -p 10022 # 公司内部机器执行
      # 10.213.129.57    ：可以访问生产的跳板机的IP

  X转发:
      X转发是一个令人惊奇但实际上用处不大的功能。因为我所能管理的远端主机都是无图形界面的，所以本部分内容我不保证正确。
      大家都知道GUI软件与X之间也是通过TCP连接的，所以X转发与其它转发也没有本质区别，甚至它简单得都不应该和其它几种转发相提并论。

10: 命令
  less: 
    跳到第一行：gg
    跳到最后一行：Sheft + g

11: 历史记录
    １．可以按一下上＼下方向键，命令行就会显示相对于当前命令的上一条或下一条历史记录．
    ２．和方向键相同功能的就是组合键Ctrl+ p （前面执行过的命令）,Ctrl +n（后面执行过的命令）．
    ２．Ctrl+ r 组合键进入历史记录搜寻状态，然后，键盘每按一个字母，当前命令行就会搜索出命令历史记录．

    删除已经输入的命令：
    ctrl + u 删除光标以前的字符 
    ctrl + k 删除光标以后的字符 

12: 用户
  useradd t9  #添加用户
  passwd t9 #修改密码
  usermod -g root t9 #添加root分组

13: 一次http数据拷贝在Linux中经历的过程
    不用sendfile的传统网络传输过程: 
    read(file,tmp_buf, len);
    write(socket,tmp_buf, len);
    硬盘 >> kernel buffer >> user buffer>> kernel socket buffer >>协议栈 #两次 buffer不同，第二个 buffer和 socket相关联
  # https://blog.csdn.net/zmj_88888888/article/details/9169227



