1: 序
  - 静态、编译型原生支持并发操作的高效语言
  - 静态、编译-运行速度快，原生支持并发-服务端开发
  - 运行时系统、编译器是C写的，所以效率不如C，但已经超过java、C++，且在优化准备超过C。
  - 暂时库没有那么多
  - go get = git clone因为go默认是从github上下载

  * 内置垃圾回收、异步函数、闭包等。另外，各种内置的库很容易和web端集成，很适合快速搭建大型系统。
  * 静态链接，做到了应用部署和OS版本完全解耦。不要小看这一点，在一个复杂的系统里，光是各种库的版本都能搞死人。 

1: command
  - go run ./hello.go  =  go build + ./hello
  # run后同级目录下不会生成hello文件，build的会

  不支持AOP，可以使用golang blog推荐的context对象