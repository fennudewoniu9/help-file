涉及模式的原则: 
  对扩展开放，对修改关闭；单一职责原则指导我们实现类要职责单一。

策略模式:
  策略模式是对算法的抽象，是一种行为设计模式；需要什么算法，自己去new然后放入cintext的环境类中；所有算法相当于平行的。

责任链模式:
  责任链模式和策略模式类似，但是两点不同，1：各算法通过类似数据结构中的后继实现串行的Handler；2：客户端执行时并不知道
  具体哪个算法执行，需要Handler自己去判断
  被请求的多个接收者通过后继的引用连接成的一条链，具体哪个节点处理，节点自己判断。

策略模式 vs 状态模式 vs 工厂模式: 
  策略模式和状态模式很像，策略每一个是独立的，而状态模式里所有状态聚合在一起管理，且状态之间会跳转，所以和责任链模式也很像，但责任链和状态模式处理完成之后流向不一样。状态
  模式避免了很多if else。简单/静态工厂模式用switch，工厂方法模式生成一个对象(猫狗)，抽象工厂模式生成一组对象(公猫母猫)
  PS: 工厂模式：https://mp.weixin.qq.com/s/oRwF6DgiT6t69tzmfUM74Q

如果新增一种策略，需要在客户端new的地方增加一句new；如果新增一个责任链节点，只需要在责任链中的两个引用之间插入一个节点。

工厂模式使用场景：
1.会有一组类似的对象需要创建
2.客户端不可预见具体哪一个对象会被创建(责任链中用到)
3.可以扩展，且扩展时不需要考虑细节和如何被创建